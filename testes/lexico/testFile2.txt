data Racional_T {
    numerador :: Int;
    denominador :: Float;
}

iterate (num != 10) num + 1;

read a;

new Racional {2, 3};

x_AD_tr = true;
y = false;
z = null;

b = 1.3;
c = .45;
d = 1.093012931;

e = 'a';
f = '\n';
g = '\\';
h = '\\'';
i = '2';
j = '\'';

()
{}
[]

-- dmafnoafoanfoanofafa

{-
    adadad
    aafafaf
    123421412
    \\
    \n
    )
    ]
    {adadadada}
    (avg)
-}

main () {
    print fat(10)[0];
}

fat (num :: Char) : Int {
    if (num < 1)
        return 1;
    else    
        return num * fat (num-1)[0];
}

divmod (num :: Bool, div :: Int) :: Int, Int {
    q = num / div;
    r = num % div;

    return q, r;
}